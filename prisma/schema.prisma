generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  role_id    String   @id @default(cuid())
  name       String   @unique
  user       User[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model User {
  user_id             String        @id @default(uuid())
  username            String        @unique
  email               String        @unique
  password            String?
  provider            Provider?
  provider_id         String?
  full_name           String
  eoffice_username    String?
  eoffice_password    String?
  account_is_verified Boolean       @default(false)
  email_is_verified   Boolean       @default(false)
  password_updated_at DateTime
  created_at          DateTime      @default(now())
  updated_at          DateTime      @updatedAt
  role                Role          @relation(fields: [role_id], references: [role_id])
  role_id             String
  scheduler           Scheduler[]
  attendance          Attendance[]
  job_activity        JobActivity[]
  location            Location[]
}

model Scheduler {
  scheduler_id Int      @id @default(autoincrement())
  task_id      String
  task_time    DateTime
  task_data    Json
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user         User?    @relation(fields: [user_id], references: [user_id])
  user_id      String?
}

model Attendance {
  attendance_id Int       @id @default(autoincrement())
  is_sunday     Boolean   @default(false)
  is_monday     Boolean   @default(false)
  is_tuesday    Boolean   @default(false)
  is_wednesday  Boolean   @default(false)
  is_thursday   Boolean   @default(false)
  is_friday     Boolean   @default(false)
  is_saturday   Boolean   @default(false)
  is_active     Boolean   @default(true)
  via           Via
  kondisi       String
  location      Location? @relation(fields: [location_id], references: [location_id])
  created_at    DateTime  @default(now())
  updated_at    DateTime? @updatedAt
  user          User?     @relation(fields: [user_id], references: [user_id])
  user_id       String?
  location_id   Int?
}

model Job {
  job_id       Int           @id @default(autoincrement())
  name         String
  job_activity JobActivity[]
  created_at   DateTime      @default(now())
  updated_at   DateTime?     @updatedAt
}

model JobActivity {
  job_activityid Int       @id @default(autoincrement())
  name           String?
  created_at     DateTime  @default(now())
  updated_at     DateTime? @updatedAt
  job            Job?      @relation(fields: [job_id], references: [job_id])
  job_id         Int?
  user           User?     @relation(fields: [user_id], references: [user_id])
  user_id        String?
}

model Location {
  location_id Int          @id @default(autoincrement())
  name        String       @unique
  lokasi      String
  alamat      String
  state       String
  provinsi    String
  created_at  DateTime     @default(now())
  updated_at  DateTime?    @updatedAt
  user        User?        @relation(fields: [user_id], references: [user_id])
  user_id     String?
  attendance  Attendance[]
}

enum Via {
  WFS
  WFO
}

enum Provider {
  GOOGLE
  MANUAL
  MANUAL_GOOGLE
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}
